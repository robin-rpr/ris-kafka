app:
  replicas: 3
  hosts:
    - rrc00 # Amsterdam, RIPE NCC, global
    - rrc01 # London, LINX/LONAP, regional
    - rrc03 # Amsterdam, AMS-IX/NL-IX, regional
    - rrc04 # Geneva, CERN, regional
    - rrc05 # Vienna, VIX, regional
    - rrc06 # Otemachi, RIPE NCC, regional
    - rrc07 # Stockholm, Netnod, regional
    - rrc10 # Milan, MIX, regional
    - rrc11 # New York, Telehouse/GTT, regional
    - rrc12 # Frankfurt, DE-CIX, regional
    - rrc13 # Moscow, MSK-IX, regional
    - rrc14 # Palo Alto, Equinix, regional
    - rrc15 # Sao Paulo, IX.br, regional
    - rrc16 # Miami, RIPE NCC, regional
    - rrc18 # Barcelona, CATNIX, regional
    - rrc19 # Johannesburg, Network Platforms, regional
    - rrc20 # Zurich, SWISS-IX, regional
    - rrc21 # Paris, France-IX, regional
    - rrc22 # Bucharest, InterLAN, regional
    - rrc23 # Singapore, Equinix, regional
    - rrc24 # Montevideo, LACNIC, global
    - rrc25 # Amsterdam, RIPE NCC, global
    - rrc26 # Dubai, Datamena/UAE-IX, regional

kafka:
  fullnameOverride: "riskafka-kafka"
  rbac:
    create: true
  controller:
    automountServiceAccountToken: true
  broker:
    automountServiceAccountToken: true
  auth:
    enabled: false
  externalAccess:
    enabled: true
    service:
      type: LoadBalancer
    autoDiscovery:
      enabled: true
    listeners: PLAINTEXT
    advertisedListeners: PLAINTEXT://stream.ris-kafka.com:9092
  configurationOverrides:
    "listener.security.protocol.map": PLAINTEXT:PLAINTEXT
    "inter.broker.listener.name": PLAINTEXT
    "authorizer.class.name": "kafka.security.authorizer.AclAuthorizer"
    "allow.everyone.if.no.acl.found": "false"
    "super.users": "User:kafka"
    "log.retention.hours": "48"
    "num.partitions": "1"
    "offsets.topic.replication.factor": "1"
    "compression.type": "lz4"
  auth:
    enabled: true
    sasl:
      mechanism: PLAIN
      interBrokerMechanism: PLAIN
  persistence:
    size: 500Gi

zookeeper:
  fullnameOverride: "riskafka-zookeeper"
  replicaCount: 3
  persistence:
    size: 10Gi

kafka-ui:
  fullnameOverride: "riskafka-kafbat"
  envs:
    config:
      KAFKA_CLUSTERS_0_NAME: "ris-kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "riskafka-kafka:29092"
      KAFKA_CLUSTERS_0_READONLY: "true"
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: ris-kafka.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      enabled: true
      certificates:
        - hosts:
            - ris-kafka.com
          secretName: ris-kafka-tls
        
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "4Gi"