services:
    # Amsterdam, RIPE NCC, global
    rrc00:
        &base_app
        build: .
        # image: robinrpr/ris-kafka:latest
        restart: unless-stopped
        stop_signal: SIGTERM  # Wind down collector safely before stopping
        stop_grace_period: 20s # Wait for 20 seconds before forcefully stopping
        mem_reservation: 200m # Reserve at least 200m of memory
        cpus: "1" # Reserve 1 CPU
        environment:
            &base_app_environment
            RRC_ZOOKEEPER_CONNECT: zookeeper:2181
            RRC_KAFKA_CONNECT: kafka:29092
            RRC_BACKUP_SIZE: 1000000
            RRC_QUEUE_SIZE: 100000
            RRC_BATCH_SIZE: 10000
            RRC_LOG_LEVEL: INFO
            RRC_HOST: rrc00
        depends_on:
            &base_app_depends_on
            kafbat:
                condition: service_started
            kafka:
                condition: service_healthy
            zookeeper:
                condition: service_healthy
        working_dir: /app
        volumes:
            - .:/app
            - rrc00_data:/var/lib/rocksdb
        entrypoint: >
            python app.py
    
    # London, LINX/LONAP, regional
    rrc01:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc01
        volumes:
            - .:/app
            - rrc01_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 10; python app.py'

    # Amsterdam, AMS-IX/NL-IX, regional
    rrc03:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc03
        volumes:
            - .:/app
            - rrc03_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 20; python app.py'

    # Geneva, CERN, regional
    rrc04:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc04
        volumes:
            - .:/app
            - rrc04_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 30; python app.py'

    # Vienna, VIX, regional
    rrc05:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc05
        volumes:
            - .:/app
            - rrc05_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 40; python app.py'

    # Otemachi, RIPE NCC, regional
    rrc06:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc06
        volumes:
            - .:/app
            - rrc06_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 50; python app.py'

    # Stockholm, Netnod, regional
    rrc07:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc07
        volumes:
            - .:/app
            - rrc07_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 60; python app.py'

    # Milan, MIX, regional
    rrc10:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc10
        volumes:
            - .:/app
            - rrc10_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 70; python app.py'

    # New York, Telehouse/GTT, regional
    rrc11:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc11
        volumes:
            - .:/app
            - rrc11_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 80; python app.py'

    # Frankfurt, DE-CIX, regional
    rrc12:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc12
        volumes:
            - .:/app
            - rrc12_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 90; python app.py'

    # Moscow, MSK-IX, regional
    rrc13:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc13
        volumes:
            - .:/app
            - rrc13_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 100; python app.py'

    # Palo Alto, Equinix, regional
    rrc14:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc14
        volumes:
            - .:/app
            - rrc14_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 110; python app.py'

    # Sao Paulo, IX.br, regional
    rrc15:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc15
        volumes:
            - .:/app
            - rrc15_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 120; python app.py'

    # Miami, RIPE NCC, regional
    rrc16:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc16
        volumes:
            - .:/app
            - rrc16_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 130; python app.py'

    # Barcelona, CATNIX, regional
    rrc18:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc18
        volumes:
            - .:/app
            - rrc18_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 140; python app.py'

    # Johannesburg, Network Platforms, regional
    rrc19:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc19
        volumes:
            - .:/app
            - rrc19_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 150; python app.py'

    # Zurich, SWISS-IX, regional
    rrc20:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc20
        volumes:
            - .:/app
            - rrc20_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 160; python app.py'

    # Paris, France-IX, regional
    rrc21:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc21
        volumes:
            - .:/app
            - rrc21_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 170; python app.py'

    # Bucharest, InterLAN, regional
    rrc22:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc22
        volumes:
            - .:/app
            - rrc22_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 180; python app.py'

    # Singapore, Equinix, regional
    rrc23:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc23
        volumes:
            - .:/app
            - rrc23_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 190; python app.py'

    # Montevideo, LACNIC, global
    rrc24:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc24
        volumes:
            - .:/app
            - rrc24_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 200; python app.py'

    # Amsterdam, RIPE NCC, global
    rrc25:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc25
        volumes:
            - .:/app
            - rrc25_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 210; python app.py'

    # Dubai, Datamena/UAE-IX, regional
    rrc26:
        <<: *base_app
        environment:
            <<: *base_app_environment
            RRC_HOST: rrc26
        volumes:
            - .:/app
            - rrc26_data:/var/lib/rocksdb
        entrypoint: >
            sh -c 'sleep 220; python app.py'

    zookeeper:
        image: confluentinc/cp-zookeeper:7.7.1
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "nc -z localhost 2181 || exit -1"]
            interval: 10s
            timeout: 5s
            retries: 3
        volumes:
            - zookeeper_data:/var/lib/zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:7.7.1
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:29092"]
            interval: 30s
            timeout: 60s
            retries: 10
        depends_on:
            zookeeper:
                condition: service_healthy
        volumes:
            - kafka_data:/var/lib/kafka/data
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://example.com:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_NUM_PARTITIONS: 1
            KAFKA_LOG_RETENTION_HOURS: 48
            KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 600000
            KAFKA_LOG_ROLL_MS: 3600000
            KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
            KAFKA_MESSAGE_MAX_BYTES: 100000000
            KAFKA_LOG_CLEANER_THREADS: 2
            KAFKA_COMPRESSION_TYPE: lz4
            KAFKA_NUM_NETWORK_THREADS: 8
            KAFKA_NUM_IO_THREADS: 8

    kafbat:
        image: ghcr.io/kafbat/kafka-ui:latest
        restart: unless-stopped
        ports:
            - 8080:8080
        depends_on:
            kafka:
                condition: service_healthy
        environment:
            KAFKA_CLUSTERS_0_NAME: ris-kafka
            KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
            KAFKA_CLUSTERS_0_READONLY: true

# Define volumes
volumes:
    zookeeper_data:
    kafka_data:
    rrc00_data:
    rrc01_data:
    rrc03_data:
    rrc04_data:
    rrc05_data:
    rrc06_data:
    rrc07_data:
    rrc10_data:
    rrc11_data:
    rrc12_data:
    rrc13_data:
    rrc14_data:
    rrc15_data:
    rrc16_data:
    rrc18_data:
    rrc19_data:
    rrc20_data:
    rrc21_data:
    rrc22_data:
    rrc23_data:
    rrc24_data:
    rrc25_data:
    rrc26_data: